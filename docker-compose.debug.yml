# Docker Compose com portas expostas para debug no Coolify
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: agro-conecta-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: agro_conecta
      POSTGRES_USER: agro_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-agro_password}
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5432:5432"  # EXPOSTO para debug
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: >
      postgres 
      -c listen_addresses='*'
      -c max_connections=100
      -c shared_buffers=128MB
    networks:
      - agro-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prisma-fix
    container_name: agro-conecta-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      FRONTEND_URL: ${FRONTEND_URL:-https://agroconecta.conext.click}
      DATABASE_URL: postgresql://agro_user:${POSTGRES_PASSWORD:-agro_password}@postgres:5432/agro_conecta
      JWT_SECRET: ${JWT_SECRET:-agroconecta_jwt_secret_debug}
      ASAAS_API_KEY: ${ASAAS_API_KEY:-sandbox_key}
      ASAAS_ENVIRONMENT: ${ASAAS_ENVIRONMENT:-sandbox}
      CORS_ORIGINS: ${CORS_ORIGINS:-https://agroconecta.conext.click,http://localhost:3000}
    ports:
      - "5000:5000"  # EXPOSTO para debug
    depends_on:
      - postgres
    networks:
      - agro-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.simple
      args:
        VITE_API_URL: ${VITE_API_URL:-http://65.109.224.186:5000/api}
    container_name: agro-conecta-frontend
    restart: unless-stopped
    ports:
      - "80:80"      # EXPOSTO para debug
      - "8080:80"    # Porta alternativa
    depends_on:
      - backend
    networks:
      - agro-network

volumes:
  postgres_data:

networks:
  agro-network:
    driver: bridge
